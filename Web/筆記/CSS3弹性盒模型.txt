弹性盒子模型（Flexbox） 是 CSS3 提供的一种布局方式，主要用来在一维（横向或纵向）上对元素进行灵活排列。它能让子元素在父容器中自动分配空间，轻松实现居中、对齐、等分布局。

核心概念：

1.flex 容器：给父元素设置 display: flex 或 display: inline-flex。

2.主轴（main axis） 和 交叉轴（cross axis）：

主轴方向由 flex-direction 决定（默认横向）。

交叉轴垂直于主轴。

3.常用属性：

justify-content：主轴方向对齐（居中、左右分布）。

align-items：交叉轴方向对齐（居中、顶部、底部）。

flex：子项如何伸缩，占多少空间。

一句话总结：Flexbox 就是让容器里的元素能自动“挤一挤、分一分”，轻松排成你想要的样子。

| 对比项         | **CSS**                                 | **CSS3**                                                                   |
|               | ------------------------------           | ------------------------------------------------------------               |
| **版本定位**   | 基础样式语言（CSS1、CSS2、CSS2.1）         | 升级版，现代网页主流标准                                                     |
| **规范形式**   | 一个整体规范                              | 模块化规范（选择器、动画、布局等独立模块）                                     |
| **语法规则**   | 基本选择器、属性和值                       | 继承 CSS 语法，新增更强大的选择器与属性                                       |
| **选择器**     | 基本选择器（类、id、标签）                 | 新增伪类、伪元素、属性选择器等（如 `:nth-child`、`:not`）                      |
| **样式效果**   | 基本颜色、字体、边距、背景图               | 新增圆角（`border-radius`）、阴影（`box-shadow`）、渐变（`linear-gradient`）   |
| **动画效果**   | 无                                      | 新增过渡（`transition`）、动画（`animation` + `@keyframes`）                   |
| **布局能力**   | 主要靠 `float`、`position`、`table`      | 新增 `flexbox`、`grid`，更灵活强大                                             |
| **响应式设计** | 需要依赖 JS 或简单双列布局                | 提供 `@media` 媒体查询，原生支持响应式                                          |
